# API/general

  const body = req.body;

  const completion = await openai.createChatCompletion({
    model: "gpt-3.5-turbo",
    temperature: 0,
    messages: [{role: "user", content: body.prompt}],
  });
  res.json(completion.data.choices[0].message.content);
  

# API/chat

  const body = req.body;
  const response = await fetch("https://api.openai.com/v1/chat/completions", 
    {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${OPENAI_KEY}`
        },
        body: JSON.stringify(data)
    })
    res.json(await response.json())

# API/image

 const body = req.body;

  const response = await openai.createImage({
    prompt: body.prompt,
    n: 1,
    model: "dall-e-3",
    size: "1024x1024",
  });
  res.json({url: response.data.data[0].url})


# API/recipe

  const body = req.body;
  const ingredients = body.ingredients;

  const prompt = `
   
  `;
  console.log(prompt);

  const completion = await openai.createChatCompletion({
    model: "gpt-3.5-turbo",
    temperature: 0,
    messages: [
      {role: "system", content: "You are a cooking expert that creates recipes."},
      {role: "user", content: prompt}
    ],
  });
  console.log(completion.data.choices[0].message.content);
  res.json(completion.data.choices[0].message.content);


# API/recipe prompt

 Create a recipe with the list of ingredients defined in the markup.
    <ingredients>${JSON.stringify(ingredients)}</ingredients>
    You can include typical ingredients found in a kitchen, such as salt, pepper, condiments.

    If the list of ingredients is empty of you can't find ingredients inside, just answer with 
    "false" without any other character.

    If you've found a recipe, send the output in JSON format as the following sample in ***

    ***
    ${JSON.stringify(recipeSample)}
    ***
